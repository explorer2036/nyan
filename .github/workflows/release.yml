name: Go Build && Release
on:
  push:
    tags:
      - '*'

jobs:
  builds:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run GoReleaser for linux
        if: matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser.yml --clean --skip=announce,validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Run GoReleaser for windows
      #   if: matrix.os == 'windows-latest'
      #   uses: goreleaser/goreleaser-action@v5
      #   with:
      #     args: release --config .goreleaser-windows.yml --clean --skip=announce,validate

      # - name: Run GoReleaser for darwin
      #   if: matrix.os == 'macos-latest'
      #   uses: goreleaser/goreleaser-action@v5
      #   with:
      #     args: release --config .goreleaser-darwin.yml --clean --skip=announce,validate
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  download:
    needs: builds
    runs-on: ubuntu-latest
    steps:
    # echo "v1.0.4" | sed -e "s/v//"
    - id: version
      run: echo "version=$(echo ${{ github.ref_name }} | sed -e 's/v//')" >> $GITHUB_OUTPUT
    - run: echo ${{ github.event.repository.name }} && echo ${{ steps.version.outputs.version }}
    - name: Download all checksums artifacts
      uses: actions/download-artifact@v4
      with:
        path: checksums
        pattern: "*_checksums.txt"
        merge-multiple: true
    # - run: ls -R checksums
