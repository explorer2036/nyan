name: Go Build && Release
on:
  push:
    tags:
      - '*'

jobs:
  builds:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run GoReleaser for linux
        if: matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser.yml --clean --skip=announce,validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser for darwin
        if: matrix.os == 'macos-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser-darwin.yml --clean --skip=announce,validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  merge-checksums:
    needs: builds
    runs-on: ubuntu-latest
    steps:
    - name: Get version from tag name
      id: version
      run: echo "version=$(echo ${{ github.ref_name }} | sed -e 's/v//')" >> $GITHUB_OUTPUT

    - name: Download all checksums assets
      uses: robinraju/release-downloader@v1.9
      with:
        repository: ${{ github.repository }}
        tag: ${{ github.ref_name }}
        fileName: "*_checksums.txt"
        out-file-path: "downloaded"
    - name: Merge all checksums assets
      run: cat downloaded/*_checksums.txt > ${{ github.event.repository.name }}_${{ steps.version.outputs.version }}_checksums.txt
    
    - name: Release please
      uses: google-github-actions/release-please-action@v3
      id: release
      with:
        release-type: simple
        bump-minor-pre-major: true
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload the merged checksums
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload ${{ github.event.repository.name }}_${{ steps.version.outputs.version }}_checksums.txt ${{ github.event.repository.name }}_${{ steps.version.outputs.version }}_checksums.txt

    - name: Delete the checksums assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        repository: ${{ github.repository }}
        assets: "*_checksums.txt"
